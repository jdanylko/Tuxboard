/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/bootstrap@5.0.0-alpha1/js/src/toast.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{getjQuery,TRANSITION_END,emulateTransitionEnd,getTransitionDurationFromElement,reflow,typeCheckConfig}from"./util/index";import Data from"./dom/data";import EventHandler from"./dom/event-handler";import Manipulator from"./dom/manipulator";const NAME="toast",VERSION="5.0.0-alpha1",DATA_KEY="bs.toast",EVENT_KEY=`.${DATA_KEY}`,EVENT_CLICK_DISMISS=`click.dismiss${EVENT_KEY}`,EVENT_HIDE=`hide${EVENT_KEY}`,EVENT_HIDDEN=`hidden${EVENT_KEY}`,EVENT_SHOW=`show${EVENT_KEY}`,EVENT_SHOWN=`shown${EVENT_KEY}`,CLASS_NAME_FADE="fade",CLASS_NAME_HIDE="hide",CLASS_NAME_SHOW="show",CLASS_NAME_SHOWING="showing",DefaultType={animation:"boolean",autohide:"boolean",delay:"number"},Default={animation:!0,autohide:!0,delay:500},SELECTOR_DATA_DISMISS='[data-dismiss="toast"]';class Toast{constructor(t,e){this._element=t,this._config=this._getConfig(e),this._timeout=null,this._setListeners(),Data.setData(t,DATA_KEY,this)}static get VERSION(){return VERSION}static get DefaultType(){return DefaultType}static get Default(){return Default}show(){if(EventHandler.trigger(this._element,EVENT_SHOW).defaultPrevented)return;this._config.animation&&this._element.classList.add(CLASS_NAME_FADE);const t=()=>{this._element.classList.remove(CLASS_NAME_SHOWING),this._element.classList.add(CLASS_NAME_SHOW),EventHandler.trigger(this._element,EVENT_SHOWN),this._config.autohide&&(this._timeout=setTimeout(()=>{this.hide()},this._config.delay))};if(this._element.classList.remove(CLASS_NAME_HIDE),reflow(this._element),this._element.classList.add(CLASS_NAME_SHOWING),this._config.animation){const e=getTransitionDurationFromElement(this._element);EventHandler.one(this._element,TRANSITION_END,t),emulateTransitionEnd(this._element,e)}else t()}hide(){if(!this._element.classList.contains(CLASS_NAME_SHOW))return;if(EventHandler.trigger(this._element,EVENT_HIDE).defaultPrevented)return;const t=()=>{this._element.classList.add(CLASS_NAME_HIDE),EventHandler.trigger(this._element,EVENT_HIDDEN)};if(this._element.classList.remove(CLASS_NAME_SHOW),this._config.animation){const e=getTransitionDurationFromElement(this._element);EventHandler.one(this._element,TRANSITION_END,t),emulateTransitionEnd(this._element,e)}else t()}dispose(){clearTimeout(this._timeout),this._timeout=null,this._element.classList.contains(CLASS_NAME_SHOW)&&this._element.classList.remove(CLASS_NAME_SHOW),EventHandler.off(this._element,EVENT_CLICK_DISMISS),Data.removeData(this._element,DATA_KEY),this._element=null,this._config=null}_getConfig(t){return t={...Default,...Manipulator.getDataAttributes(this._element),..."object"==typeof t&&t?t:{}},typeCheckConfig(NAME,t,this.constructor.DefaultType),t}_setListeners(){EventHandler.on(this._element,EVENT_CLICK_DISMISS,SELECTOR_DATA_DISMISS,()=>this.hide())}static jQueryInterface(t){return this.each(function(){let e=Data.getData(this,DATA_KEY);if(e||(e=new Toast(this,"object"==typeof t&&t)),"string"==typeof t){if(void 0===e[t])throw new TypeError(`No method named "${t}"`);e[t](this)}})}static getInstance(t){return Data.getData(t,DATA_KEY)}}const $=getjQuery();if($){const t=$.fn[NAME];$.fn[NAME]=Toast.jQueryInterface,$.fn[NAME].Constructor=Toast,$.fn[NAME].noConflict=(()=>($.fn[NAME]=t,Toast.jQueryInterface))}export default Toast;
//# sourceMappingURL=/sm/337b1380b28a0486f6af00a1f8a3ef11891fc60f9eef9f5d44de66ea85f41427.map